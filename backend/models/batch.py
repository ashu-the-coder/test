from pydantic import BaseModel, Field
from typing import List, Optional
from datetime import datetime

class BatchCreate(BaseModel):
    """
    Model for creating a new product batch.
    
    IMPORTANT: All batches must have IPFS documentation to ensure enterprise 
    traceability compliance. The IPFS CID is mandatory and must be provided 
    during batch creation. Blockchain registration will be handled automatically.
    """
    product_id: str = Field(..., description="ID of the product this batch belongs to")
    production_date: datetime = Field(..., description="Date when the batch was produced")
    expiry_date: Optional[datetime] = Field(None, description="Expiry date of the batch")
    initial_quantity: float = Field(..., description="Initial quantity of the batch")
    batch_number: Optional[str] = Field(None, description="Custom batch number (autogenerated if not provided)")
    batch_notes: Optional[str] = Field(None, description="Additional notes about the batch")
    ipfs_cid: str = Field(..., description="IPFS CID for batch documentation (MANDATORY, must start with Qm or bafy)")
    
    class Config:
        json_schema_extra = {
            "example": {
                "product_id": "prod_12345",
                "production_date": "2025-06-25T10:30:00",
                "expiry_date": "2027-06-25T10:30:00",
                "initial_quantity": 1000,
                "batch_number": "BATCH-001",
                "batch_notes": "Initial production run",
                "ipfs_cid": "QmZ4tDuvesekSs4qM5ZBKpXiZGun7S2CYtEZRB3DYXkjGx"
            }
        }

class Batch(BaseModel):
    """
    Model for batch data.
    
    Every batch must have both IPFS documentation and blockchain registration
    for enterprise traceability compliance. Both ipfs_cid and blockchain_tx_hash
    are mandatory fields and will be verified during batch creation.
    """
    id: str = Field(..., description="Unique identifier for the batch")
    batch_number: str = Field(..., description="Human-readable batch number")
    product_id: str = Field(..., description="ID of the product this batch belongs to")
    enterprise_id: str = Field(..., description="ID of the enterprise that owns this batch")
    production_date: datetime = Field(..., description="Date when the batch was produced")
    expiry_date: Optional[datetime] = Field(None, description="Expiry date of the batch")
    initial_quantity: float = Field(..., description="Initial quantity of the batch")
    current_quantity: float = Field(..., description="Current quantity of the batch")
    creation_date: datetime = Field(..., description="Date when the batch record was created")
    status: str = Field("produced", description="Current status of the batch")
    batch_notes: Optional[str] = Field(None, description="Additional notes about the batch")
    ipfs_cid: str = Field(..., description="IPFS CID for batch documentation (MANDATORY)")
    blockchain_tx_hash: str = Field(..., description="Blockchain transaction hash for batch registration (MANDATORY)")
    qr_code_url: Optional[str] = Field(None, description="URL to the QR code for this batch")
    verification_url: Optional[str] = Field(None, description="URL for verification of this batch")
    
    class Config:
        json_schema_extra = {
            "example": {
                "id": "batch_12345",
                "batch_number": "PROD001-B001",
                "product_id": "prod_12345",
                "enterprise_id": "ent_12345",
                "production_date": "2025-06-25T10:30:00",
                "expiry_date": "2027-06-25T10:30:00",
                "initial_quantity": 1000,
                "current_quantity": 950,
                "creation_date": "2025-06-25T10:35:00",
                "status": "in_storage",
                "batch_notes": "Initial production run",
                "ipfs_cid": "QmZ4tDuvesekSs4qM5ZBKpXiZGun7S2CYtEZRB3DYXkjGx",
                "blockchain_tx_hash": "0x1234567890abcdef1234567890abcdef12345678",
                "qr_code_url": "https://api.example.com/qr/batch_12345",
                "verification_url": "https://xinete.io/verify/batch_12345"
            }
        }
